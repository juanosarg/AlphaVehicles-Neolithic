<?xml version="1.0" encoding="utf-8" ?>
<Defs>
	<Vehicles.VehicleDef ParentName="VehiclePawn_Mechanical">
		<defName>AV_Balloon</defName>
		<label>Balloon</label>
		<description>A lighter-than-air aircraft consisting of a bag, called an envelope, which contains heated air. Suspended beneath is a wicker basket which carries passengers and a source of heat.\n\n&lt;color=#bb8f04&gt;Crew:&lt;/color&gt; Driver x1, Passenger x1\n&lt;color=#bb8f04&gt;Fuel type:&lt;/color&gt; Wood\n\n&lt;color=#bb8f04&gt;Pedantry PSA:&lt;/color&gt; I know hot air balloons don't use ballast. I don't care, it looks cool. Plus this one uses hot Helixien gas instead of air, and since I made it up I make up the rules too!</description>
		<modExtensions>
			<li Class="VanillaVehiclesExpanded.StatExtension">
				<statToAdd>
					<li>AV_VehicleTier</li>
					<li>AV_Traction</li>
					<li>AV_FuelRate</li>
				</statToAdd>
				<statValues>
					<li>AV_Tier0</li>
					<li>AV_TractionCombustion</li>
					<li>AV_Fuel8-50</li>
				</statValues>
				<statDescriptions>
					<li>AV_Tier0Desc</li>
					<li>AV_TractionCombustionDesc</li>
					<li>AV_Fuel8-50Desc</li>
				</statDescriptions>
			</li>
		</modExtensions>
		<graphicData>
			<texPath>Things/Vehicles/Air/Tier0/Balloon/AV_Balloon</texPath>
			<graphicClass>Vehicles.Graphic_Vehicle</graphicClass>
			<shaderType>CutoutComplexPattern</shaderType>
			<drawSize>(15,15)</drawSize>
			<drawRotated>false</drawRotated>
			<color>(77, 35, 25)</color>
			<colorTwo>(94, 43, 39)</colorTwo>
			<colorThree>(59, 32, 23)</colorThree>
			<pattern>AV_Pattern_Wood_2</pattern>
		</graphicData>
		<fillPercent>0.2</fillPercent>
		<uiIconPath>Things/Vehicles/Air/Tier0/Balloon/AV_BalloonUI</uiIconPath>
		<buildDef>AV_Balloon_Blueprint</buildDef>
		<size>(1,1)</size>
		<vehicleMovementPermissions LockSetting="True">NotAllowed</vehicleMovementPermissions>
		<vehicleCategory>Transport</vehicleCategory>
		<techLevel>Neolithic</techLevel>
		<vehicleType>Air</vehicleType>
		<statBases>
			<ArmorRating_Blunt>0</ArmorRating_Blunt>
			<ArmorRating_Sharp>0</ArmorRating_Sharp>
			<ArmorRating_Heat>0</ArmorRating_Heat>
			<Flammability>1</Flammability>
			<MarketValue>350</MarketValue>
		</statBases>
		<vehicleStats>
			<Mass>50</Mass>
			<MoveSpeed LockSetting="True">0</MoveSpeed>
			<CargoCapacity>100</CargoCapacity>
			<RepairRate>1</RepairRate>
			<FlightSpeed>1</FlightSpeed>
		</vehicleStats>
		<soundOneShotsOnEvent Inherit="false"/>
		<race>
			<baseBodySize>5</baseBodySize>
		</race>
		<drawProperties>
			<displayRotation>North</displayRotation>
		</drawProperties>
		<properties>
			<roles>
				<li>
					<key>Operator</key>
					<label>Operator</label>
					<slots>1</slots>
					<slotsToOperate>1</slotsToOperate>
					<hitbox>
						<side>Body</side>
					</hitbox>
					<handlingTypes>
						<li>Movement</li>
					</handlingTypes>
				</li>
				<li>
					<key>Passenger</key>
					<label>Passenger</label>
					<slots>1</slots>
				</li>
			</roles>
		</properties>
		<components>
			<li>
				<key>Envelope</key>
				<label>Envelope</label>
				<health>30</health>
				<priorityStatEfficiency>true</priorityStatEfficiency>
				<depth>External</depth>
				<categories>
					<li>MoveSpeed</li>
					<li>FlightControl</li>
					<li>FlightSpeed</li>
				</categories>
			</li>
			<li>
				<key>Gondola</key>
				<label>Gondola</label>
				<health>10</health>
				<depth>External</depth>
			</li>
		</components>
		<comps>
			<li Class="Vehicles.CompProperties_FueledTravel">
				<fuelType>WoodLog</fuelType>
				<fuelConsumptionRate>8</fuelConsumptionRate>
				<fuelCapacity>50</fuelCapacity>
			</li>
			<li Class="Vehicles.CompProperties_VehicleLauncher">
				<controlInFlight>false</controlInFlight>
				<launchProtocol Class="Vehicles.VTOLTakeoff">
					<maxFlightNodes>1</maxFlightNodes>
					<launchProperties>
						<maxTicks>3000</maxTicks>
						<renderShadow>false</renderShadow>
						<events>
							<li>
								<triggerAt>0</triggerAt>
								<method>Vehicles.LaunchProtocol.SetOverlayStatus(false)</method>
							</li>
							<li>
								<triggerAt>0.25</triggerAt>
								<method>Vehicles.LaunchProtocol.SetOverlayStatus(true)</method>
							</li>
						</events>
						<xPositionCurve Class="SmashTools.BezierCurve">
							<points>
								<li>(0.5, 0)</li>
								<li>(1, 0)</li>
								<li>(1, 0)</li>
								<li>(1, 0)</li>
								<li>(1, 0.41)</li>
								<li>(0.88, 90.93)</li>
								<li>(0.87, 79.95)</li>
							</points>
						</xPositionCurve>
						<zPositionCurve Class="SmashTools.BezierCurve">
							<points>
								<li>(0, 0)</li>
								<li>(0.25, 0)</li>
								<li>(0.36, 46.37)</li>
								<li>(0.42, 91.43)</li>
								<li>(0.74, 94.07)</li>
								<li>(0.5, 100)</li>
							</points>
						</zPositionCurve>
					</launchProperties>
					<landingProperties>
						<maxTicks>3000</maxTicks>
						<renderShadow>false</renderShadow>
						<events>
							<li>
								<triggerAt>0.7</triggerAt>
								<method>Vehicles.LaunchProtocol.SetOverlayStatus(false)</method>
							</li>
						</events>
						<zPositionCurve Class="SmashTools.BezierCurve">
							<points>
								<li>(0, 200)</li>
								<li>(0.25, 0)</li>
								<li>(0.5, 0)</li>
								<li>(0.75, 0)</li>
								<li>(1, 0)</li>
							</points>
						</zPositionCurve>
					</landingProperties>
				</launchProtocol>
			</li>
		</comps>
	</Vehicles.VehicleDef>
</Defs>